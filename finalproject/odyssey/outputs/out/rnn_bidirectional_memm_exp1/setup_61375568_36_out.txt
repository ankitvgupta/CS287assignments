[?1034hUsing cuda	
datafile:	/n/home09/ankitgupta/CS287/CS287assignments/finalproject/EPRINC_1.hdf5	classifier:	rnn	b:	128	alpha:	1	sequence_length:	100	embedding_size	50	optimizer:	sgd	epochs:	50	hidden	100	eta:	0.05	rnn_unit1	lstm	rnn_unit2	lstm	dropout	0.75	num_bidir_layers	3	
Num classes:	10	
Vocab size:	37	
Start class:	2	
Num features	46	
Test size	 85200
    46
[torch.LongStorage of size 2]

Using cuda	
 1188853
      46
[torch.LongStorage of size 2]

 1188853
[torch.LongStorage of size 1]

     1
 85200
    46
[torch.LongStorage of size 3]

     1
 85200
[torch.LongStorage of size 2]

Data sizes	
  128
 9287
   46
[torch.LongStorage of size 3]

  128
 9287
[torch.LongStorage of size 2]

Converted LSTM to CUDA	
Converted crit to CUDA	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> output]
  (1): nn.ParallelTable {
    input
      |`-> (1): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> output]
      |      (1): nn.SplitTable
      |      (2): nn.Sequencer @ nn.Recursor @ nn.Linear(46 -> 50)
      |      (3): nn.BiSequencer @ nn.Sequential {
      |        [input -> (1) -> (2) -> (3) -> output]
      |        (1): nn.ConcatTable {
      |          input
      |            |`-> (1): nn.Sequencer @ nn.FastLSTM(50 -> 50)
      |            |`-> (2): nn.Sequential {
      |            |      [input -> (1) -> (2) -> (3) -> output]
      |            |      (1): nn.ReverseTable
      |            |      (2): nn.Sequencer @ nn.FastLSTM(50 -> 50)
      |            |      (3): nn.ReverseTable
      |            |    }
      |             ... -> output
      |        }
      |        (2): nn.ZipTable
      |        (3): nn.Sequencer @ nn.Recursor @ nn.JoinTable
      |      }
      |      (4): nn.Sequencer @ nn.Recursor @ nn.Dropout(0.8, busy)
      |      (5): nn.BiSequencer @ nn.Sequential {
      |        [input -> (1) -> (2) -> (3) -> output]
      |        (1): nn.ConcatTable {
      |          input
      |            |`-> (1): nn.Sequencer @ nn.FastLSTM(100 -> 50)
      |            |`-> (2): nn.Sequential {
      |            |      [input -> (1) -> (2) -> (3) -> output]
      |            |      (1): nn.ReverseTable
      |            |      (2): nn.Sequencer @ nn.FastLSTM(100 -> 50)
      |            |      (3): nn.ReverseTable
      |            |    }
      |             ... -> output
      |        }
      |        (2): nn.ZipTable
      |        (3): nn.Sequencer @ nn.Recursor @ nn.JoinTable
      |      }
      |      (6): nn.Sequencer @ nn.Recursor @ nn.Dropout(0.8, busy)
      |      (7): nn.BiSequencer @ nn.Sequential {
      |        [input -> (1) -> (2) -> (3) -> output]
      |        (1): nn.ConcatTable {
      |          input
      |            |`-> (1): nn.Sequencer @ nn.FastLSTM(100 -> 50)
      |            |`-> (2): nn.Sequential {
      |            |      [input -> (1) -> (2) -> (3) -> output]
      |            |      (1): nn.ReverseTable
      |            |      (2): nn.Sequencer @ nn.FastLSTM(100 -> 50)
      |            |      (3): nn.ReverseTable
      |            |    }
      |             ... -> output
      |        }
      |        (2): nn.ZipTable
      |        (3): nn.Sequencer @ nn.Recursor @ nn.JoinTable
      |      }
      |      (8): nn.Sequencer @ nn.Recursor @ nn.Dropout(0.8, busy)
      |      (9): nn.Sequencer @ nn.Recursor @ nn.Linear(100 -> 100)
      |      (10): nn.Sequencer @ nn.Recursor @ nn.Unsqueeze(dim 1)
      |      (11): nn.JoinTable
      |    }
      |`-> (2): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> output]
      |      (1): nn.Copy
      |      (2): nn.SplitTable
      |      (3): nn.Sequencer @ nn.Recursor @ nn.LookupTable
      |      (4): nn.Sequencer @ nn.Recursor @ nn.View(-1)
      |      (5): nn.Sequencer @ nn.Recursor @ nn.Unsqueeze(dim 1)
      |      (6): nn.JoinTable
      |    }
       ... -> output
  }
  (2): nn.JoinTable
  (3): nn.SplitTable
  (4): nn.Sequencer @ nn.Recursor @ nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.Linear(110 -> 10)
    (2): nn.LogSoftMax
  }
}
Input size	9287	
Epoch	1	231.73923063278	
Epoch	2	94.334725916386	
Epoch	3	94.062499582767	
Epoch	4	94.324612677097	
Epoch	5	94.326116144657	
Epoch	6	91.624028265476	
Epoch	7	86.57048368454	
Epoch	8	84.350318014622	
Epoch	9	83.282736480236	
Epoch	10	82.695586264133	
Epoch	11	82.129205048084	
Epoch	12	81.006274938583	
Epoch	13	80.410430550575	
Epoch	14	79.471038818359	
Epoch	15	78.46386551857	
Epoch	16	78.093833506107	
Epoch	17	77.253272712231	
Epoch	18	76.520049333572	
Epoch	19	76.044880568981	
Epoch	20	75.520865082741	
Epoch	21	75.187214970589	
Epoch	22	74.988242268562	
Epoch	23	74.327898561954	
Epoch	24	74.075248122215	
Epoch	25	73.730344355106	
Epoch	26	73.516874194145	
Epoch	27	73.028420209885	
Epoch	28	72.848847329617	
Epoch	29	72.466477692127	
Epoch	30	71.578668892384	
Epoch	31	71.46786481142	
Epoch	32	71.653710782528	
Epoch	33	71.21479845047	
Epoch	34	71.552554130554	
Epoch	35	71.152843415737	
Epoch	36	70.484906613827	
Epoch	37	70.570671439171	
Epoch	38	70.387815833092	
Epoch	39	70.189528763294	
Epoch	40	69.98609149456	
Epoch	41	70.280900597572	
Epoch	42	69.836083889008	
Epoch	43	69.590558648109	
Epoch	44	69.680720210075	
Epoch	45	69.53352946043	
Epoch	46	69.538195490837	
Epoch	47	68.797210872173	
Epoch	48	69.115182816982	
Epoch	49	69.235934793949	
Epoch	50	69.125886023045	
Starting the testing	
Converted prediction model into CUDA	
Running LSTM on test data...	
Starting Viterbi...	
