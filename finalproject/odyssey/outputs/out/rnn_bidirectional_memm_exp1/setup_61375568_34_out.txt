[?1034hUsing cuda	
datafile:	/n/home09/ankitgupta/CS287/CS287assignments/finalproject/EPRINC_1.hdf5	classifier:	rnn	b:	128	alpha:	1	sequence_length:	100	embedding_size	50	optimizer:	sgd	epochs:	50	hidden	100	eta:	0.05	rnn_unit1	lstm	rnn_unit2	lstm	dropout	0.25	num_bidir_layers	3	
Num classes:	10	
Vocab size:	37	
Start class:	2	
Num features	46	
Test size	 85200
    46
[torch.LongStorage of size 2]

Using cuda	
 1188853
      46
[torch.LongStorage of size 2]

 1188853
[torch.LongStorage of size 1]

     1
 85200
    46
[torch.LongStorage of size 3]

     1
 85200
[torch.LongStorage of size 2]

Data sizes	
  128
 9287
   46
[torch.LongStorage of size 3]

  128
 9287
[torch.LongStorage of size 2]

Converted LSTM to CUDA	
Converted crit to CUDA	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> output]
  (1): nn.ParallelTable {
    input
      |`-> (1): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> output]
      |      (1): nn.SplitTable
      |      (2): nn.Sequencer @ nn.Recursor @ nn.Linear(46 -> 50)
      |      (3): nn.BiSequencer @ nn.Sequential {
      |        [input -> (1) -> (2) -> (3) -> output]
      |        (1): nn.ConcatTable {
      |          input
      |            |`-> (1): nn.Sequencer @ nn.FastLSTM(50 -> 50)
      |            |`-> (2): nn.Sequential {
      |            |      [input -> (1) -> (2) -> (3) -> output]
      |            |      (1): nn.ReverseTable
      |            |      (2): nn.Sequencer @ nn.FastLSTM(50 -> 50)
      |            |      (3): nn.ReverseTable
      |            |    }
      |             ... -> output
      |        }
      |        (2): nn.ZipTable
      |        (3): nn.Sequencer @ nn.Recursor @ nn.JoinTable
      |      }
      |      (4): nn.Sequencer @ nn.Recursor @ nn.Dropout(0.2, busy)
      |      (5): nn.BiSequencer @ nn.Sequential {
      |        [input -> (1) -> (2) -> (3) -> output]
      |        (1): nn.ConcatTable {
      |          input
      |            |`-> (1): nn.Sequencer @ nn.FastLSTM(100 -> 50)
      |            |`-> (2): nn.Sequential {
      |            |      [input -> (1) -> (2) -> (3) -> output]
      |            |      (1): nn.ReverseTable
      |            |      (2): nn.Sequencer @ nn.FastLSTM(100 -> 50)
      |            |      (3): nn.ReverseTable
      |            |    }
      |             ... -> output
      |        }
      |        (2): nn.ZipTable
      |        (3): nn.Sequencer @ nn.Recursor @ nn.JoinTable
      |      }
      |      (6): nn.Sequencer @ nn.Recursor @ nn.Dropout(0.2, busy)
      |      (7): nn.BiSequencer @ nn.Sequential {
      |        [input -> (1) -> (2) -> (3) -> output]
      |        (1): nn.ConcatTable {
      |          input
      |            |`-> (1): nn.Sequencer @ nn.FastLSTM(100 -> 50)
      |            |`-> (2): nn.Sequential {
      |            |      [input -> (1) -> (2) -> (3) -> output]
      |            |      (1): nn.ReverseTable
      |            |      (2): nn.Sequencer @ nn.FastLSTM(100 -> 50)
      |            |      (3): nn.ReverseTable
      |            |    }
      |             ... -> output
      |        }
      |        (2): nn.ZipTable
      |        (3): nn.Sequencer @ nn.Recursor @ nn.JoinTable
      |      }
      |      (8): nn.Sequencer @ nn.Recursor @ nn.Dropout(0.2, busy)
      |      (9): nn.Sequencer @ nn.Recursor @ nn.Linear(100 -> 100)
      |      (10): nn.Sequencer @ nn.Recursor @ nn.Unsqueeze(dim 1)
      |      (11): nn.JoinTable
      |    }
      |`-> (2): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> output]
      |      (1): nn.Copy
      |      (2): nn.SplitTable
      |      (3): nn.Sequencer @ nn.Recursor @ nn.LookupTable
      |      (4): nn.Sequencer @ nn.Recursor @ nn.View(-1)
      |      (5): nn.Sequencer @ nn.Recursor @ nn.Unsqueeze(dim 1)
      |      (6): nn.JoinTable
      |    }
       ... -> output
  }
  (2): nn.JoinTable
  (3): nn.SplitTable
  (4): nn.Sequencer @ nn.Recursor @ nn.Sequential {
    [input -> (1) -> (2) -> output]
    (1): nn.Linear(110 -> 10)
    (2): nn.LogSoftMax
  }
}
Input size	9287	
Epoch	1	235.53696608543	
Epoch	2	95.132833063602	
Epoch	3	94.746492803097	
Epoch	4	94.511157333851	
Epoch	5	94.316077053547	
Epoch	6	89.146603405476	
Epoch	7	84.739948630333	
Epoch	8	83.322274804115	
Epoch	9	82.158475458622	
Epoch	10	80.407760024071	
Epoch	11	79.072610497475	
Epoch	12	77.424620330334	
Epoch	13	76.088079154491	
Epoch	14	74.759296953678	
Epoch	15	73.376025021076	
Epoch	16	72.287820219994	
Epoch	17	72.031403958797	
Epoch	18	70.94833111763	
Epoch	19	70.510197401047	
Epoch	20	69.481205999851	
Epoch	21	69.598705470562	
Epoch	22	68.847617089748	
Epoch	23	68.423426747322	
Epoch	24	67.96416258812	
Epoch	25	67.957685232162	
Epoch	26	67.750113666058	
Epoch	27	67.571925580502	
Epoch	28	67.210981369019	
Epoch	29	67.119593143463	
Epoch	30	66.657151132822	
Epoch	31	66.49644690752	
Epoch	32	66.084956020117	
Epoch	33	65.915805846453	
Epoch	34	65.639638870955	
Epoch	35	65.35874953866	
Epoch	36	65.527647733688	
Epoch	37	64.952148556709	
Epoch	38	64.681990563869	
Epoch	39	64.73631003499	
Epoch	40	64.686170578003	
Epoch	41	64.261599093676	
Epoch	42	63.949736267328	
Epoch	43	63.672487169504	
Epoch	44	63.83904120326	
Epoch	45	63.720174729824	
Epoch	46	63.248000204563	
Epoch	47	63.196241974831	
Epoch	48	63.193536102772	
Epoch	49	62.844330400229	
Epoch	50	62.589408993721	
Starting the testing	
Converted prediction model into CUDA	
Running LSTM on test data...	
Starting Viterbi...	
